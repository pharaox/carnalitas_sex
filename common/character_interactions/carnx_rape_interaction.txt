carn_rape_interaction = {
	category = interaction_category_prison
	desc = carn_rape_interaction_desc
	interface_priority = 30
	icon = carn_icon

	is_shown = {
		NOT = { has_game_rule = carn_sex_interaction_disabled }
		has_game_rule = carn_content_consent_noncon
		scope:actor = {
			is_adult = yes
			carnx_is_sex_interaction_blocked_trigger = no
		}
		scope:recipient = {
			is_ai = yes
			is_adult = yes
			carnx_is_sex_interaction_blocked_trigger = no
			is_imprisoned_by = scope:actor
		}
	}

	is_valid_showing_failures_only = {
		scope:actor = {
			carn_can_have_sex_trigger = yes
		}
		scope:recipient = {
			carn_can_be_raped_trigger = yes
			custom_tooltip = {
				text = "carnx_sex_interaction_recipient_cooldown"
				NOT = { var:carnx_sex_interaction_used_by_actor ?= scope:actor }
			}
			custom_tooltip = {
				text = "carnx_sex_target_too_far_away"
				carnx_is_sex_target_at_valid_location_trigger = { PARTNER = scope:actor }
			}
			custom_description = {
				text = "currently_being_tortured"
				NOT = { has_character_flag = is_being_tortured }
			}
		}
	}

	cooldown = { months = carn_sex_interaction_cooldown }

	# Secret
	send_option = {
		is_shown = {
			scope:recipient = {
				has_dread_level_towards = {
					target = scope:actor
					level >= 1
				}
			}
		}
		flag = secret
		localization = "carnx_sex_secret_option"
		current_description = {
			desc = "carnx_sex_secret_option_desc"
		}
	}

	# BDSM
	send_option = {
		is_shown = {
			scope:actor = {
				carnx_can_do_bdsm_trigger = yes
			}
		}
		flag = bdsm
		localization = "carnx_sex_bdsm_option"
		current_description = {
			desc = "carnx_sex_bdsm_option_desc"
		}
	}

	send_options_exclusive = no

	on_accept = {
		# TODO Rape player by AI
		scope:actor = {
			carnx_sex_debug_log_effect = { MSG = carnx_sex_debug_msg_rape_interaction_accepted }

			carnx_rape_interaction_main_effect = yes

			hidden_effect = {
				carnx_rape_interaction_sex_scene_effect = yes
			}
		}
		scope:recipient = {
			set_variable = {
				name = carnx_sex_interaction_used_by_actor
				value = scope:actor
				months = carn_sex_interaction_cooldown_base
			}
		}
	}

	auto_accept = yes
	
	ai_targets = {
		ai_recipients = prisoners
	}

	ai_frequency = 12

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 0

		# Opinion of prisoner (-25 to 25 depending on opinion)
		opinion_modifier = {
			opinion_target = scope:recipient
			multiplier = -0.25
		}

		# Prisoner attraction
		modifier = {
			is_attracted_to_gender_of = scope:recipient
			add = {
				value = scope:recipient.attraction
				multiply = 0.5
			}
		}
		modifier = {
			NOT = { is_attracted_to_gender_of = scope:recipient }
			add = -50
		}

		# Lustful / Chaste (25 / -25)
		modifier = {
			is_attracted_to_gender_of = scope:recipient
			has_trait = lustful
			add = 25
		}
		modifier = {
			is_attracted_to_gender_of = scope:recipient
			has_trait = chaste
			add = -25
		}

		# Compassion (-25 to 25 depending on compassion)
		ai_value_modifier = {
			ai_compassion = -0.25
		}

		# Rival (25) or nemesis (50)
		modifier = {
			has_relation_rival = scope:recipient
			add = {
				value = 25
				if = {
					limit = { has_relation_nemesis = scope:recipient }
					multiply = 2
				}
			}
		}

		# House feud (25)
		modifier = {
			exists = house
			exists = scope:recipient.house
			house.house_head = {
				any_owned_story = {
					story_type = story_cycle_house_feud
					has_variable = house_feud_house
					var:house_feud_house = scope:recipient.house
				}
			}
			has_opinion_modifier = {
				modifier = house_feud_opinion
				target = scope:recipient.house.house_head
			}
			add = 25
		}

		# Tried to escape from prison (25)
		modifier = {
			has_opinion_modifier = {
				modifier = tried_to_escape_from_prison_opinion
				target = scope:recipient
			}
			add = 25
		}

		# Secret (AI should use this if available)
		modifier = {
			scope:secret = yes
			add = 1
		}

		# BDSM (AI should use this if available)
		modifier = {
			scope:bdsm = yes
			add = 1
		}
	}
}
