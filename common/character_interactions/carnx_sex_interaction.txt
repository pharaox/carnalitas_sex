carn_sex_interaction = {
	category = interaction_category_friendly
	desc = carn_sex_interaction_desc
	interface_priority = 40
	icon = carn_icon

	redirect = {
		scope:recipient = {
			save_scope_as = secondary_recipient
		}
	}

	populate_recipient_list = {
		scope:recipient = {
			add_to_list = characters
		}
		scope:actor = {
			if = {
				limit = {
					carnx_can_do_orgy_trigger = yes
				}
				every_courtier = {
					limit = {
						NOT = { this = scope:recipient }
						carnx_is_eligible_sex_secondary_target_trigger = { PLAYER = scope:actor }
					}
					add_to_list = characters
				}
			}
		}
	}

	is_shown = {
		NOR = {
			has_game_rule = carn_sex_interaction_disabled
			scope:actor = scope:recipient
		}
		scope:actor = {
			is_adult = yes
			carnx_is_sex_interaction_blocked_trigger = no
		}
		scope:recipient = {
			is_adult = yes
			carnx_is_sex_interaction_blocked_trigger = no
		}
		scope:actor = {
			carnx_can_have_sex_with_trigger = { PARTNER = scope:recipient }
		}
	}

	is_valid_showing_failures_only = {
		scope:actor = {
			carn_can_have_sex_trigger = yes
		}
		scope:recipient = {
			carn_can_have_sex_trigger = yes
			custom_tooltip = {
				text = "carnx_sex_interaction_recipient_cooldown"
				NOT = { var:carnx_sex_interaction_used_by_actor ?= scope:actor }
			}
		}
		trigger_if = {
			limit = {
				scope:actor = {
					is_available = no
				}
			}
			scope:recipient = {
				custom_tooltip = {
					text = "carnx_sex_target_too_far_away"
					carnx_is_sex_target_at_valid_location_trigger = { PARTNER = scope:actor }
				}
			}
		}

		# If the recipient is a prostitute, check if actor has enough gold
		trigger_if = {
			limit = {
				scope:actor = {
					carnx_should_pay_prostitution_price_trigger = { PARTNER = scope:recipient }
				}
			}
			scope:actor.gold >= scope:recipient.carn_prostitute_sex_interaction_price_value
		}
	}

	cooldown = { months = carn_sex_interaction_cooldown }

	# Orgy
	send_option = {
		is_shown = {
			scope:actor = {
				carnx_can_do_orgy_trigger = yes
				custom_tooltip = {
					text = "carnx_has_eligible_sex_secondary_target_tt"
					any_courtier = {
						NOT = { this = scope:recipient }
						carnx_is_eligible_sex_secondary_target_trigger = { PLAYER = scope:actor }
					}
				}
			}
			scope:recipient = {
				carnx_is_sex_target_at_valid_location_trigger = { PARTNER = scope:actor }
			}
		}
		is_valid = {
			custom_tooltip = {
				text = "carnx_secondary_target_same_as_primary_target_tt"
				NOT = { scope:recipient = scope:secondary_recipient }
			}
		}
		flag = orgy
		localization = "carnx_sex_orgy_option"
		current_description = {
			desc = "carnx_sex_orgy_option_desc"
		}
	}

	# BDSM
	send_option = {
		is_shown = {
			scope:actor = {
				carnx_can_do_bdsm_trigger = yes
			}
			scope:recipient = {
				carnx_is_eligible_bdsm_target_trigger = { PLAYER = scope:actor }
				carnx_is_sex_target_at_valid_location_trigger = { PARTNER = scope:actor }
			}
		}
		is_valid = {
			custom_tooltip = {
				text = "carnx_secondary_target_not_eligible_bdsm_target_tt"
				OR = {
					NOT = { exists = scope:secondary_recipient }
					scope:recipient = scope:secondary_recipient
					scope:secondary_recipient = {
						carnx_is_eligible_bdsm_target_trigger = { PLAYER = scope:actor }
					}
				}
			}
		}
		flag = bdsm
		localization = "carnx_sex_bdsm_option"
		current_description = {
			desc = "carnx_sex_bdsm_option_desc"
		}
	}

	# Travel
	send_option = {
		is_shown = {
			scope:recipient = {
				NOT = { carnx_is_sex_target_at_valid_location_trigger = { PARTNER = scope:actor } }
			}
		}
		flag = travel
		localization = "carnx_sex_travel_option"
		current_description = {
			desc = "carnx_sex_travel_option_desc"
		}
	}

	should_use_extra_icon = {
		scope:actor = {
			is_available = yes
		}
		scope:recipient = {
			NOT = { carnx_is_sex_target_at_valid_location_trigger = { PARTNER = scope:actor } }
		}
	}
	extra_icon = "gfx/interface/icons/character_interactions/travel_mixed.dds"

	send_options_exclusive = no

	can_send = {
		trigger_if = {
			limit = { scope:travel = no }
			scope:recipient = {
				custom_tooltip = {
					text = "carnx_sex_target_too_far_away"
					carnx_is_sex_target_at_valid_location_trigger = { PARTNER = scope:actor }
				}
			}
		}
	}

	on_accept = {
		save_temporary_scope_value_as = { name = demand_sex value = no }
		scope:actor = {
			if = {
				limit = { scope:travel = yes }

				# Show effect as tooltip
				custom_tooltip = carnx_sex_travel_warning_tt
				show_as_tooltip = {
					carnx_pay_prostitution_price_effect = yes
					carnx_sex_interaction_main_effect = yes
				}

				# Set travel variables
				set_variable = { name = carnx_travel_sex_interaction value = flag:sex }
				set_variable = { name = carnx_travel_sex_recipient value = scope:recipient }

				# Start travel to recipient location
				start_travel_plan = {
					destination = scope:recipient.location
					return_trip = yes
					on_arrival_on_action = carnx_on_sex_interaction_arrival
					on_arrival_destinations = all_but_last
					on_travel_planner_cancel_on_action = carnx_on_sex_interaction_cancel
				}
			}
			else = {
				carnx_pay_prostitution_price_effect = yes
				carnx_sex_interaction_main_effect = yes

				hidden_effect = {
					carnx_sex_interaction_sex_scene_effect = yes
				}
			}
		}
		scope:recipient = {
			if = {
				limit = { scope:travel = no }
				set_variable = {
					name = carnx_sex_interaction_used_by_actor
					value = scope:actor
					months = carn_sex_interaction_cooldown_base
				}
			}
		}
	}

	auto_accept = yes
}