# Apply sex interaction effects on all participants if not on cooldown
carnx_sex_interaction_main_effect = {
	# If not on cooldown, show the effect and add the cooldown flag
	if = {
		limit = {
			NOT = { has_character_flag = carn_sex_interaction_effect_cd }
		}

		show_as_tooltip = {
			carn_had_sex_with_effect = {
				CHARACTER_1 = scope:actor
				CHARACTER_2 = scope:recipient
				C1_PREGNANCY_CHANCE = pregnancy_chance
				C2_PREGNANCY_CHANCE = pregnancy_chance
				STRESS_EFFECTS = no
				DRAMA = yes
			}
		}

		if = {
			limit = { scope:orgy = yes }
			show_as_tooltip = {
				carn_had_sex_with_effect = {
					CHARACTER_1 = scope:actor
					CHARACTER_2 = scope:secondary_recipient
					C1_PREGNANCY_CHANCE = pregnancy_chance
					C2_PREGNANCY_CHANCE = pregnancy_chance
					STRESS_EFFECTS = no
					DRAMA = yes
				}
			}
		}

		# Effects for actor and recipient
		carnx_sex_interaction_impact_effect = { PARTNER = scope:recipient }
		scope:recipient = {
			carnx_sex_interaction_impact_effect = { PARTNER = scope:actor }
		}

		# Effects for secondary recipient
		if = {
			limit = { scope:orgy = yes }
			scope:secondary_recipient = {
				carnx_sex_interaction_impact_effect = { PARTNER = scope:actor }
			}
		}

		add_character_flag = {
			flag = carn_sex_interaction_effect_cd
			months = carn_sex_interaction_cooldown_base
		}
	}
	else = {
		custom_tooltip = carn_sex_interaction_effect_cd_tt
		add_character_flag = carn_block_next_had_sex_with_effect
	}
}

carnx_rape_interaction_main_effect = {
	# If not on cooldown, show the effect and add the cooldown flag
	if = {
		limit = {
			NOT = { has_character_flag = carn_sex_interaction_effect_cd }
		}

		show_as_tooltip = {
			carn_had_sex_with_effect = {
				CHARACTER_1 = scope:actor
				CHARACTER_2 = scope:recipient
				C1_PREGNANCY_CHANCE = pregnancy_chance
				C2_PREGNANCY_CHANCE = pregnancy_chance
				STRESS_EFFECTS = no
				DRAMA = yes
			}
		}

		# TODO Improve effects for actor and recipient
		#carnx_sex_interaction_impact_effect = { PARTNER = scope:recipient }
		#scope:recipient = {
		#	carnx_sex_interaction_impact_effect = { PARTNER = scope:actor }
		#}
		carn_rape_effect_v2 = {
			VICTIM = scope:recipient
		}

		add_character_flag = {
			flag = carn_sex_interaction_effect_cd
			months = carn_sex_interaction_cooldown_base
		}
	}
	else = {
		custom_tooltip = carn_sex_interaction_effect_cd_tt
		add_character_flag = carn_block_next_had_sex_with_effect
	}
}

# Pay prostitution price if the recipient is a prostitute
carnx_pay_prostitution_price_effect = {
	# If the recpient is a prostitute, pay the price
	if = {
		limit = {
			carnx_should_pay_prostitution_price_trigger = { PARTNER = scope:recipient }
		}

		# Pay prostitution price
		pay_short_term_gold = {
			target = scope:recipient
			gold = scope:recipient.carn_prostitute_sex_interaction_price_value
		}
	}
}

# Consume hooks on all recipients
carnx_demand_sex_consume_hooks_effect = {
	# Use the hook on the recipient
	carnx_demand_sex_consume_hook_effect = { PARTNER = scope:recipient }

	# Use the hook on the secondary recipient
	if = {
		limit = { scope:orgy = yes }
		carnx_demand_sex_consume_hook_effect = { PARTNER = scope:secondary_recipient }
	}
}

# Fire Carnalitas sex interaction sex scene
carnx_sex_interaction_sex_scene_effect = {
	# Request sex scene flags
	carnx_request_sex_scene_flags_effect = { TARGET = scope:recipient }

	# Request sex scene locations
	carnx_request_sex_scene_locations_effect = { TARGET = scope:recipient }

	# Actually fire the sex scene
	if = {
		limit = { scope:orgy = yes }
		carnx_sex_scene_effect = {
			PLAYER = scope:actor
			TARGET = scope:recipient
			TARGET2 = scope:secondary_recipient
			STRESS_EFFECTS = no
			DRAMA = yes
		}
	}
	else = {
		carn_sex_scene_effect = {
			PLAYER = scope:actor
			TARGET = scope:recipient
			STRESS_EFFECTS = no
			DRAMA = yes
		}
	}
}

# Fire Carnal Court sex interaction sex scene
carnx_carnal_court_sex_interaction_sex_scene_effect = {
	# Actually fire the sex scene
	if = {
		limit = { scope:carnal_court = yes }
		carnx_carnal_court_sex_scene_effect = {
			PLAYER = scope:actor
			TARGET = scope:recipient
			STRESS_EFFECTS = no
			DRAMA = yes
		}
	}
	else = {
		# Request sex scene flags
		carnx_request_sex_scene_flags_effect = { TARGET = scope:recipient }
		carnx_add_random_sex_scene_flags_effect = yes

		carnx_original_sex_scene_effect = {
			PLAYER = scope:actor
			TARGET = scope:recipient
			STRESS_EFFECTS = no
			DRAMA = yes
		}
	}
}

carnx_rape_interaction_sex_scene_effect = {
	# Request sex scene flags
	carn_sex_scene_is_noncon_effect = yes
	carn_sex_scene_character_is_dom_player_effect = yes

	# Request optional scene flags, e.g. bdsm
	carnx_request_optional_sex_scene_flags_effect = yes

	# Request sex scene locations
	if = {
		limit = {
			scope:recipient = { is_in_prison_type = house_arrest }
		}
		carnx_request_sex_scene_location_effect = { LOCATION = private_chamber }
	}
	else_if = {
		limit = {
			scope:recipient = { is_in_prison_type = dungeon }
		}
		carnx_request_sex_scene_location_effect = { LOCATION = dungeon }
	}

	carn_sex_scene_effect = {
		PLAYER = scope:actor
		TARGET = scope:recipient
		STRESS_EFFECTS = no
		DRAMA = yes
	}
}

# Apply sex interaction effects on a single participant
carnx_sex_interaction_impact_effect = {
	# Piety and stress impact of sinful actions
	carnx_sex_interaction_piety_impact_effect = { PARTNER = $PARTNER$ }

	# Lose stress if arousal stress is enabled (player only)
	if = {
		limit = {
			is_ai = no
			has_game_rule = carn_arousal_stress_enabled
			is_attracted_to_gender_of = $PARTNER$
			NOT = { has_trait = chaste }
		}
		add_stress = carnx_sex_interaction_stress_loss_value
	}

	# Stress impact
	carnx_sex_interaction_stress_impact_effect = { PARTNER = $PARTNER$ }

	# Additional stress and opinion impact of demanding sex
	if = {
		limit = { scope:demand_sex = yes }
		if = {
			limit = { is_ai = no }
			stress_impact = {
				compassionate = miniscule_stress_impact_gain
				sadistic = miniscule_stress_impact_loss
				callous = miniscule_stress_impact_loss
				# TODO More traits causing stress impact?
			}
		}
		else = {
			carnx_demand_sex_interaction_opinion_impact_effect = { PARTNER = $PARTNER$ }
		}
	}

	# Additional piety and stress impact for BDSM
	if = {
		limit = { scope:bdsm = yes }
		if = {
			limit = { is_ai = no }
			carnx_sex_interaction_bdsm_player_effect = { PARTNER = $PARTNER$ }
		}
		else = {
			carnx_sex_interaction_bdsm_target_effect = { PARTNER = $PARTNER$ }
		}
	}

	# Other impact
	carnx_sex_interaction_other_impact_effect = { PARTNER = $PARTNER$ }
}

# Consume hooks on a single participant
carnx_demand_sex_consume_hook_effect = {
	if = {
		limit = {
			has_usable_hook = $PARTNER$
			trigger_if = {
				limit = { has_game_rule = carnx_sex_demand_sex_consumes_slave_hooks_disabled }
				NOT = { has_relation_slave = $PARTNER$ }
			}
		}
		use_hook = $PARTNER$
	}
}

# Request sex scene flags, either consensual or dubcon
# Noncon is reserved for raping prisoners, so we don't request it here
carnx_request_sex_scene_flags_effect = {
	save_temporary_scope_as = character

	# Lovers and soulmates: consensual
	if = {
		limit = {
			carnx_is_lover_trigger = { CHARACTER = $TARGET$ }
		}
		carn_sex_scene_request_consensual = yes
	}
	# Others: consensual or dubcon depending on opinion, attraction, and options
	else = {
		if = {
			limit = {
				$TARGET$ = {
					is_attracted_to_gender_of = scope:character
					carnx_is_attracted_target_happy_with_sex_trigger = { CHARACTER = scope:character }
				}
				is_attracted_to_gender_of = $TARGET$
				carnx_is_attracted_player_happy_with_sex_trigger = { CHARACTER = $TARGET$ }
				trigger_if = {
					limit = { exists = scope:bdsm }
					scope:bdsm = no
				}
			}
			carn_sex_scene_request_consensual = yes
		}
		else = {
			carn_sex_scene_request_dubcon = yes
			carn_sex_scene_request_dom_player = yes
		}
	}

	# Request optional scene flags, e.g. bdsm or orgy
	carnx_request_optional_sex_scene_flags_effect = yes
}

carnx_request_optional_sex_scene_flags_effect = {
	if = {
		limit = { scope:orgy ?= yes }
		carn_sex_scene_request_orgy = yes
	}
	if = {
		limit = { scope:bdsm ?= yes }
		carn_sex_scene_request_bdsm = yes
	}
}

carnx_add_random_sex_scene_flags_effect = {
	carn_sex_scene_character_is_giving_player_effect = yes
	random_list = {
		60 = {
			carn_sex_scene_is_vaginal_effect = yes
			carn_sex_scene_is_cum_inside_effect = yes
		}
		20 = {
			carn_sex_scene_is_vaginal_effect = yes
			carn_sex_scene_is_cum_outside_effect = yes
		}
		10 = {
			trigger = { has_game_rule = carn_content_anal_enabled }
			carn_sex_scene_is_anal_effect = yes
		}
		10 = {
			carn_sex_scene_is_oral_effect = yes
		}
	}
}

carnx_request_sex_scene_locations_effect = {
	# Consensual, lovers and soulmates: all locations supported by the PDX sex scene generator
	if = {
		limit = {
			carnx_sex_scene_flag_requested_trigger = { FLAG = consensual }
			carnx_is_lover_trigger = { CHARACTER = $TARGET$ }
		}
		carnx_request_sex_scene_location_effect = { LOCATION = private_chamber }
		carnx_request_sex_scene_location_effect = { LOCATION = garden }
		carnx_request_sex_scene_location_effect = { LOCATION = stable }
		carnx_request_sex_scene_location_effect = { LOCATION = copse }
		carnx_request_sex_scene_location_effect = { LOCATION = kitchen }
	}
	# Dubcon, bdsm: only private_chamber and dungeon
	else_if = {
		limit = {
			carnx_sex_scene_flag_requested_trigger = { FLAG = dubcon }
			carnx_sex_scene_flag_requested_trigger = { FLAG = bdsm }
		}
		carnx_request_sex_scene_location_effect = { LOCATION = private_chamber }
		carnx_request_sex_scene_location_effect = { LOCATION = dungeon }
	}
	# Others: only private_chamber and garden
	else = {
		carnx_request_sex_scene_location_effect = { LOCATION = private_chamber }
		carnx_request_sex_scene_location_effect = { LOCATION = garden }
	}
}

carnx_sex_interaction_piety_impact_effect = {
	carnx_sin_piety_impact_effect = { SIN = adultery PARTNER = $PARTNER$ }
	carnx_sin_piety_impact_effect = { SIN = sodomy PARTNER = $PARTNER$ }
	carnx_sin_piety_impact_effect = { SIN = incest PARTNER = $PARTNER$ }
}

carnx_sin_piety_impact_effect = {
	save_temporary_scope_as = character

	# Lose piety if $SIN$ is illegal or shunned in this character's faith
	if = {
		limit = {
			NOT = { carnx_is_lover_trigger = { CHARACTER = $PARTNER$ } }
			carnx_is_sex_with_character_$SIN$_trigger = { CHARACTER = $PARTNER$ }
		}
		if = {
			limit = {
				carnx_is_$SIN$_crime_trigger = yes
			}
			custom_tooltip = carnx_sex_interaction_$SIN$_crime_warning_tt
			#add_piety = minor_piety_loss
		}
		else_if = {
			limit = {
				carnx_is_$SIN$_shunned_trigger = yes
			}
			custom_tooltip = carnx_sex_interaction_$SIN$_shunned_warning_tt
			#add_piety = miniscule_piety_loss
		}
	}
}

carnx_sex_interaction_stress_impact_effect = {
	save_temporary_scope_as = character
	$PARTNER$ = { save_scope_as = partner }

	# Gain stress if not attracted to the gender of partner
	if = {
		limit = {
			NOT = { is_attracted_to_gender_of = $PARTNER$ }
		}
		custom_tooltip = carnx_sex_interaction_not_attracted_to_warning_tt
		add_stress = minor_stress_impact_gain
	}
	# Lose stress if attracted to the gender of partner and lustful or rakish
	else = {
		stress_impact = {
			lustful = minor_stress_impact_loss
			rakish = minor_stress_impact_loss
		}
	}

	# Gain / lose stress if sex with partner is crime or shunned and zealous / cynical
	if = {
		limit = {
			carnx_is_sex_with_character_crime_trigger = { CHARACTER = $PARTNER$ }
		}
		stress_impact = {
			zealous = minor_stress_impact_gain
			cynical = minor_stress_impact_loss
		}
	}
	else_if = {
		limit = {
			carnx_is_sex_with_character_shunned_trigger = { CHARACTER = $PARTNER$ }
		}
		stress_impact = {
			zealous = miniscule_stress_impact_gain
			cynical = miniscule_stress_impact_loss
		}
	}
}

carnx_sex_interaction_other_impact_effect = {
	$PARTNER$ = {}
}

carnx_demand_sex_interaction_opinion_impact_effect = {
	if = {
		limit = {
			carnx_is_sex_with_character_crime_trigger = { CHARACTER = $PARTNER$ }
		}
		add_opinion = {
			target = $PARTNER$
			modifier = carnx_demanded_sex_crime_opinion
		}
	}
	else_if = {
		limit = {
			carnx_is_sex_with_character_shunned_trigger = { CHARACTER = $PARTNER$ }
		}
		add_opinion = {
			target = $PARTNER$
			modifier = carnx_demanded_sex_shunned_opinion
		}
	}
}

carnx_sex_interaction_bdsm_player_effect = {
	custom_tooltip = carnx_sex_interaction_bdsm_warning_tt

	# Piety impact
	if = {
		limit = {
			NOT = { has_perk = divine_retribution_perk }
		}
		add_piety = minor_piety_loss
	}

	# Stress impact
	if = {
		limit = { has_relation_rival = $PARTNER$ }

		if = {
			limit = {
				NOR = {
					has_trait = sadistic
					has_trait = vengeful
					has_trait = compassionate
					has_trait = forgiving
				}
			}
			add_stress = minor_stress_impact_loss
		}
		else = {
			stress_impact = {
				sadistic = medium_stress_impact_loss
				vengeful = medium_stress_impact_loss
				compassionate = miniscule_stress_impact_gain
				forgiving = miniscule_stress_impact_gain
			}
		}
	}
	else = {
		stress_impact = {
			sadistic = minor_stress_impact_loss
			vengeful = minor_stress_impact_loss
		}
	}
}

carnx_sex_interaction_bdsm_target_effect = {
	custom_tooltip = carnx_sex_interaction_bdsm_warning_tt

	# Stress impact
	if = {
		limit = {
			NOR = {
				has_trait = craven
				has_trait = brave
			}
		}
		add_stress = minor_stress_impact_gain
	}
	else = {
		stress_impact = {
			craven = medium_stress_impact_gain
			brave = miniscule_stress_impact_gain
		}
	}

	# Opinion effects
	add_opinion = {
		target = $PARTNER$
		modifier = carnx_forced_me_into_bdsm_opinion
	}
}

canrx_remove_sex_interaction_cooldown_effect = {
	switch = {
		trigger = $INTERACTION$
		flag:sex = {
			remove_interaction_cooldown = carn_sex_interaction
		}
		flag:demand_sex = {
			remove_interaction_cooldown = dsi_demand_sex_interaction
		}
	}
}

carnx_run_sex_interaction_effect = {
	switch = {
		trigger = $INTERACTION$
		flag:sex = {
			run_interaction = {
				interaction = carn_sex_interaction
				actor = this
				recipient = $RECIPIENT$
				send_threshold = accept
			}
		}
		flag:demand_sex = {
			run_interaction = {
				interaction = dsi_demand_sex_interaction
				actor = this
				recipient = $RECIPIENT$
				send_threshold = accept
			}
		}
	}
}